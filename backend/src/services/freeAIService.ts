/**
 * Free AI Service using Hugging Face Inference API
 * 30,000 requests/month completely FREE!
 */

interface AIModels {
  chat: string;
  multilingual: string;
  sentiment: string;
  qa: string;
}

interface AIResponse {
  answer: string;
  language: string;
  confidence: number;
  source: string;
  category?: string;
}

interface HuggingFaceResponse {
  generated_text?: string;
  answer?: string;
  score?: number;
}

interface SentimentResult {
  label: string;
  score: number;
}

interface KeywordData {
  keywords: string[];
  weight: number;
}

interface KeywordMapping {
  [category: string]: KeywordData;
}

interface LanguageResponses {
  [intent: string]: string;
}

interface ResponseMapping {
  [language: string]: LanguageResponses;
}

interface EnhancedKnowledge {
  [category: string]: {
    en: string;
    hi: string;
    raj: string;
  };
}

interface MatchResult {
  response: string;
  confidence: number;
  category: string;
}

class FreeAIService {
  private baseUrl: string;
  private models: AIModels;
  private requestCount: number;
  private dailyLimit: number;

  constructor() {
    this.baseUrl = 'https://api-inference.huggingface.co/models';
    this.models = {
      chat: 'microsoft/DialoGPT-medium',
      multilingual: 'facebook/mbart-large-50-many-to-many-mmt',
      sentiment: 'cardiffnlp/twitter-roberta-base-sentiment-latest',
      qa: 'deepset/roberta-base-squad2'
    };
    this.requestCount = 0;
    this.dailyLimit = 1000; // Conservative limit
  }

  /**
   * Generate chat response using free Hugging Face model
   */
  async generateResponse(message: string, language: string = 'en'): Promise<AIResponse> {
    try {
      // Check if we have HF token
      const token = process.env.HUGGINGFACE_API_KEY;
      if (!token || token === 'your-huggingface-api-key') {
        return this.fallbackResponse(message, language);
      }

      const response = await fetch(`${this.baseUrl}/${this.models.chat}`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          inputs: message,
          parameters: {
            max_length: 100,
            temperature: 0.7,
            do_sample: true
          }
        })
      });

      if (!response.ok) {
        throw new Error(`HF API error: ${response.status}`);
      }

      const data = await response.json() as HuggingFaceResponse[];
      
      this.requestCount++;
      
      return {
        answer: data[0]?.generated_text || 'I understand your question. How can I help you with JECRC Foundation?',
        language: language,
        confidence: 0.8,
        source: 'huggingface'
      };

    } catch (error) {
      console.error('HuggingFace API error:', error);
      return this.fallbackResponse(message, language);
    }
  }

  /**
   * Question-answering using free model
   */
  async answerQuestion(question: string, context: string): Promise<AIResponse> {
    try {
      const token = process.env.HUGGINGFACE_API_KEY;
      if (!token || token === 'your-huggingface-api-key') {
        return this.searchInContext(question, context);
      }

      const response = await fetch(`${this.baseUrl}/${this.models.qa}`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          inputs: {
            question: question,
            context: context
          }
        })
      });

      const data = await response.json() as HuggingFaceResponse;
      
      return {
        answer: data.answer || 'I found relevant information in our knowledge base.',
        confidence: data.score || 0.7,
        language: 'en',
        source: 'huggingface'
      };

    } catch (error) {
      console.error('QA service error:', error);
      return this.searchInContext(question, context);
    }
  }

  /**
   * Sentiment analysis (free)
   */
  async analyzeSentiment(text: string): Promise<SentimentResult> {
    try {
      const token = process.env.HUGGINGFACE_API_KEY;
      if (!token || token === 'your-huggingface-api-key') {
        return this.basicSentiment(text);
      }

      const response = await fetch(`${this.baseUrl}/${this.models.sentiment}`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          inputs: text
        })
      });

      const data = await response.json() as SentimentResult[];
      return data[0] || this.basicSentiment(text);

    } catch (error) {
      return this.basicSentiment(text);
    }
  }

  /**
   * Enhanced chat response with better intelligence
   */
  async generateEnhancedResponse(message: string, language: string = 'en', intent: string = 'general'): Promise<AIResponse> {
    try {
      // First check our enhanced knowledge base
      const knowledgeResponse = this.getEnhancedKnowledgeResponse(message, language, intent);
      if (knowledgeResponse.confidence > 0.3) { // Lowered threshold
        return knowledgeResponse;
      }

      // Try external AI API if available (skip for now)
      // const aiResponse = await this.tryExternalAI(message, language);
      // if (aiResponse && aiResponse.confidence > 0.7) {
      //   return aiResponse;
      // }

      // Fallback to our enhanced contextual responses
      return this.getContextualResponse(message, language, intent);
    } catch (error) {
      console.error('Enhanced AI error:', error);
      return this.getContextualResponse(message, language, intent);
    }
  }

  /**
   * Enhanced knowledge base with more specific JECRC information
   */
  getEnhancedKnowledgeResponse(message: string, language: string, intent: string): AIResponse {
    const enhancedKnowledge: EnhancedKnowledge = {
      admission: {
        en: "ЁЯОУ JECRC Foundation Admissions:\n\nЁЯУЛ Engineering: JEE Main/REAP required (Cutoff: 50k-150k rank)\nЁЯУЛ Management: CAT/MAT/CMAT accepted (Percentile: 50+)\nЁЯУЛ Application Period: March-July\nЁЯУЮ Admissions Office: +91-141-2770000\nЁЯМР Apply online: admissions.jecrc.ac.in\n\nЁЯТб Documents needed: 10th/12th certificates, entrance scores, category certificate (if applicable)",
        hi: "ЁЯОУ JECRC Foundation рдкреНрд░рд╡реЗрд╢:\n\nЁЯУЛ рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: JEE Main/REAP рдЖрд╡рд╢реНрдпрдХ (рдХрдЯрдСрдл: 50k-150k рд░реИрдВрдХ)\nЁЯУЛ рдореИрдиреЗрдЬрдореЗрдВрдЯ: CAT/MAT/CMAT рд╕реНрд╡реАрдХрд╛рд░ (рдкреНрд░рддрд┐рд╢рдд: 50+)\nЁЯУЛ рдЖрд╡реЗрджрди рдЕрд╡рдзрд┐: рдорд╛рд░реНрдЪ-рдЬреБрд▓рд╛рдИ\nЁЯУЮ рдкреНрд░рд╡реЗрд╢ рдХрд╛рд░реНрдпрд╛рд▓рдп: +91-141-2770000\n\nЁЯТб рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ: 10рд╡реАрдВ/12рд╡реАрдВ рдкреНрд░рдорд╛рдгрдкрддреНрд░, рдкреНрд░рд╡реЗрд╢ рд╕реНрдХреЛрд░, рд╢реНрд░реЗрдгреА рдкреНрд░рдорд╛рдгрдкрддреНрд░",
        raj: "ЁЯОУ JECRC Foundation рдкреНрд░рд╡реЗрд╢:\n\nЁЯУЛ рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: JEE Main/REAP рдЪрд╛рд╣рд┐рдП (рдХрдЯрдСрдл: 50k-150k рд░реИрдВрдХ)\nЁЯУЛ рдореИрдиреЗрдЬрдореЗрдВрдЯ: CAT/MAT/CMAT рд▓реЗрд╡реИ рд╕реИ\nЁЯУЛ рдЖрд╡реЗрджрди: рдорд╛рд░реНрдЪ рддреИ рдЬреБрд▓рд╛рдИ рддрдХ\nЁЯУЮ рджрд╛рдЦрд▓рд╛ рдСрдлрд┐рд╕: +91-141-2770000"
      },
      fees: {
        en: "ЁЯТ░ JECRC Fee Structure (2024-25):\n\nЁЯФз Engineering: тВ╣80,000-1,20,000/year\nЁЯТ╝ Management: тВ╣70,000-1,00,000/year\nЁЯТ╗ BCA/MCA: тВ╣60,000-80,000/year\nЁЯОи Design: тВ╣75,000-95,000/year\n\nЁЯПЖ Scholarships: Up to 100% for merit\nЁЯТ│ Payment: EMI options available\nЁЯПж Education loans supported\nЁЯУЮ Fees Office: +91-141-2770000 Ext: 234",
        hi: "ЁЯТ░ JECRC рдлреАрд╕ рд╕рдВрд░рдЪрдирд╛ (2024-25):\n\nЁЯФз рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: тВ╣80,000-1,20,000/рд╡рд░реНрд╖\nЁЯТ╝ рдореИрдиреЗрдЬрдореЗрдВрдЯ: тВ╣70,000-1,00,000/рд╡рд░реНрд╖\nЁЯТ╗ BCA/MCA: тВ╣60,000-80,000/рд╡рд░реНрд╖\n\nЁЯПЖ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐: рдореЗрд░рд┐рдЯ рдХреЗ рд▓рд┐рдП 100% рддрдХ\nЁЯТ│ рднреБрдЧрддрд╛рди: EMI рд╡рд┐рдХрд▓реНрдк рдЙрдкрд▓рдмреНрдз\nЁЯПж рд╢рд┐рдХреНрд╖рд╛ рдЛрдг рд╕рдорд░реНрдерд┐рдд",
        raj: "ЁЯТ░ JECRC рдлреАрд╕ (2024-25):\n\nЁЯФз рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: тВ╣80,000-1,20,000/рд╕рд╛рд▓\nЁЯТ╝ рдореИрдиреЗрдЬрдореЗрдВрдЯ: тВ╣70,000-1,00,000/рд╕рд╛рд▓\n\nЁЯПЖ рд╕реНрдХреЙрд▓рд░рд╢рд┐рдк: рдореЗрд░рд┐рдЯ рдХреЗ рд▓рд┐рдП 100% рддрдХ\nЁЯТ│ EMI рдХреА рд╕реБрд╡рд┐рдзрд╛ рдЙрдкрд▓рдмреНрдз"
      },
      courses: {
        en: "ЁЯУЪ JECRC Courses Offered:\n\nЁЯФз Engineering: CSE, ECE, ME, CE, EE, IT\nЁЯТ╝ Management: MBA, BBA, PGDM\nЁЯТ╗ Computer: BCA, MCA, B.Tech CSE\nЁЯОи Design: Fashion, Interior Design\nЁЯУК Commerce: B.Com, M.Com\nЁЯУЦ Arts: BA, MA in various streams\n\nтнР Popular: CSE (500 seats), MBA (120 seats)\nЁЯОп Specializations: AI/ML, Data Science, Digital Marketing",
        hi: "ЁЯУЪ JECRC рдкрд╛рдареНрдпрдХреНрд░рдо:\n\nЁЯФз рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: CSE, ECE, ME, CE, EE, IT\nЁЯТ╝ рдкреНрд░рдмрдВрдзрди: MBA, BBA, PGDM\nЁЯТ╗ рдХрдВрдкреНрдпреВрдЯрд░: BCA, MCA, B.Tech CSE\nЁЯОи рдбрд┐рдЬрд╝рд╛рдЗрди: рдлреИрд╢рди, рдЗрдВрдЯреАрд░рд┐рдпрд░ рдбрд┐рдЬрд╝рд╛рдЗрди\n\nтнР рд▓реЛрдХрдкреНрд░рд┐рдп: CSE (500 рд╕реАрдЯреЗрдВ), MBA (120 рд╕реАрдЯреЗрдВ)\nЁЯОп рд╡рд┐рд╢реЗрд╖рдЬреНрдЮрддрд╛: AI/ML, рдбреЗрдЯрд╛ рд╕рд╛рдЗрдВрд╕, рдбрд┐рдЬрд┐рдЯрд▓ рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ",
        raj: "ЁЯУЪ JECRC рдХреЛрд░реНрд╕:\n\nЁЯФз рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ: CSE, ECE, ME, CE, EE, IT\nЁЯТ╝ рдореИрдиреЗрдЬрдореЗрдВрдЯ: MBA, BBA, PGDM\nЁЯТ╗ рдХрдВрдкреНрдпреВрдЯрд░: BCA, MCA\n\nтнР рд▓реЛрдХрдкреНрд░рд┐рдп: CSE, MBA\nЁЯОп рд╕реНрдкреЗрд╢рд▓рд╛рдЗрдЬреЗрд╢рди: AI/ML, рдбреЗрдЯрд╛ рд╕рд╛рдЗрдВрд╕"
      },
      facilities: {
        en: "ЁЯПв JECRC Campus Facilities:\n\nЁЯУЪ Library: 50,000+ books, digital resources, 24/7 access\nЁЯФм Labs: Modern computer labs (500+ systems), engineering labs\nЁЯПа Hostel: Separate for boys/girls, AC rooms, WiFi, mess\nЁЯН╜я╕П Cafeteria: Multiple food courts, healthy options\nЁЯПе Medical: On-campus clinic, ambulance service\nЁЯЪМ Transport: College buses from major locations\nЁЯТк Sports: Cricket ground, basketball, gym, indoor games\nЁЯОн Cultural: Auditorium (1000 capacity), music room\nЁЯУ╢ WiFi: High-speed internet throughout campus",
        hi: "ЁЯПв JECRC рдХреИрдВрдкрд╕ рд╕реБрд╡рд┐рдзрд╛рдПрдВ:\n\nЁЯУЪ рдкреБрд╕реНрддрдХрд╛рд▓рдп: 50,000+ рдкреБрд╕реНрддрдХреЗрдВ, рдбрд┐рдЬрд┐рдЯрд▓ рд╕рдВрд╕рд╛рдзрди, 24/7 рдкрд╣реБрдВрдЪ\nЁЯФм рд▓реИрдм: рдЖрдзреБрдирд┐рдХ рдХрдВрдкреНрдпреВрдЯрд░ рд▓реИрдм (500+ рд╕рд┐рд╕реНрдЯрдо), рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ рд▓реИрдм\nЁЯПа рдЫрд╛рддреНрд░рд╛рд╡рд╛рд╕: рд▓рдбрд╝рдХреЗ/рд▓рдбрд╝рдХрд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЕрд▓рдЧ, AC рдХрдорд░реЗ, WiFi, рдореЗрд╕\nЁЯН╜я╕П рдХреИрдВрдЯреАрди: рдХрдИ рдлреВрдб рдХреЛрд░реНрдЯ, рд╕реНрд╡рд╕реНрде рд╡рд┐рдХрд▓реНрдк\nЁЯПе рдЪрд┐рдХрд┐рддреНрд╕рд╛: рдХреИрдВрдкрд╕ рдХреНрд▓рд┐рдирд┐рдХ, рдПрдореНрдмреБрд▓реЗрдВрд╕ рд╕реЗрд╡рд╛",
        raj: "ЁЯПв JECRC рдХреИрдВрдкрд╕ рд╕реБрд╡рд┐рдзрд╛рд╡рд╛рдВ:\n\nЁЯУЪ рд▓рд╛рдЗрдмреНрд░реЗрд░реА: 50,000+ рдХрд┐рддрд╛рдмрд╛рдВ, рдбрд┐рдЬрд┐рдЯрд▓ рд░рд┐рд╕реЛрд░реНрд╕\nЁЯФм рд▓реИрдм: рдЖрдзреБрдирд┐рдХ рдХрдВрдкреНрдпреВрдЯрд░ рд▓реИрдм, рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ рд▓реИрдм\nЁЯПа рд╣реЙрд╕реНрдЯрд▓: рдЫреЛрд░реЛрдВ/рдЫреЛрд░рд┐рдпреЛрдВ рдЦрд╛рддрд░ рдЕрд▓рдЧ, AC рд░реВрдо, WiFi\nЁЯН╜я╕П рдХреИрдВрдЯреАрди: рдХрдИ рдлреВрдб рдХреЛрд░реНрдЯ\nЁЯПе рдореЗрдбрд┐рдХрд▓: рдХреИрдВрдкрд╕ рдХреНрд▓рд┐рдирд┐рдХ"
      },
      placement: {
        en: "ЁЯОп JECRC Placement Record (2023-24):\n\nЁЯУИ Success Rate: 85%+ students placed\nЁЯТ░ Salary Packages:\n  тАв Average: тВ╣3.5-6 LPA\n  тАв Highest: тВ╣25 LPA (Amazon)\n  тАв Starting: тВ╣2.5 LPA minimum\n\nЁЯПв Top Recruiters:\n  тАв Tech: TCS, Infosys, Wipro, Amazon, Microsoft\n  тАв Consulting: Accenture, IBM, Capgemini\n  тАв Finance: ICICI, HDFC, Bajaj\n\nЁЯОУ Training: Resume building, mock interviews, soft skills\nЁЯУЮ Placement Cell: +91-141-2770000 Ext: 456",
        hi: "ЁЯОп JECRC рдкреНрд▓реЗрд╕рдореЗрдВрдЯ рд░рд┐рдХреЙрд░реНрдб (2023-24):\n\nЁЯУИ рд╕рдлрд▓рддрд╛ рджрд░: 85%+ рдЫрд╛рддреНрд░ рдкреНрд▓реЗрд╕реНрдб\nЁЯТ░ рд╡реЗрддрди рдкреИрдХреЗрдЬ:\n  тАв рдФрд╕рдд: тВ╣3.5-6 LPA\n  тАв рд╕рд░реНрд╡реЛрдЪреНрдЪ: тВ╣25 LPA (Amazon)\n  тАв рдиреНрдпреВрдирддрдо: тВ╣2.5 LPA\n\nЁЯПв рд╢реАрд░реНрд╖ рдирд┐рдпреЛрдХреНрддрд╛:\n  тАв рдЯреЗрдХ: TCS, Infosys, Wipro, Amazon\n  тАв рдХрдВрд╕рд▓реНрдЯрд┐рдВрдЧ: Accenture, IBM, Capgemini\n\nЁЯОУ рдкреНрд░рд╢рд┐рдХреНрд╖рдг: рд░рд┐рдЬреНрдпреВрдореЗ рдирд┐рд░реНрдорд╛рдг, рдореЙрдХ рдЗрдВрдЯрд░рд╡реНрдпреВ",
        raj: "ЁЯОп JECRC рдкреНрд▓реЗрд╕рдореЗрдВрдЯ (2023-24):\n\nЁЯУИ рд╕рдлрд▓рддрд╛: 85%+ рдЫрд╛рддреНрд░рд╛рд╡рд╛рдВ рдХреЛ рдЬреЙрдм\nЁЯТ░ рд╕реИрд▓рд░реА:\n  тАв рдФрд╕рдд: тВ╣3.5-6 LPA\n  тАв рд╕рдмрд╕реВрдВ рдЬреНрдпрд╛рджрд╛: тВ╣25 LPA\n\nЁЯПв рдЯреЙрдк рдХрдВрдкрдиреА: TCS, Infosys, Amazon\nЁЯОУ рдЯреНрд░реЗрдирд┐рдВрдЧ: рд░рд┐рдЬреНрдпреВрдореЗ, рдЗрдВрдЯрд░рд╡реНрдпреВ рдХреА рддреИрдпрд╛рд░реА"
      },
      hostel: {
        en: "ЁЯПа JECRC Hostel Facilities:\n\nЁЯПв Separate hostels for boys and girls\nЁЯПа Furnished AC/Non-AC rooms\nЁЯН╜я╕П Vegetarian mess with healthy meals\nЁЯУ╢ High-speed Wi-Fi throughout\nЁЯЫбя╕П 24/7 security with CCTV\nЁЯПе Medical facilities on campus\nЁЯТк Gym and recreational facilities\nЁЯЪ┐ Hot water supply\nЁЯУЪ Study rooms and common areas\n\nЁЯТ░ Fees: тВ╣60,000-тВ╣80,000/year (including meals)\nЁЯУЮ Hostel Office: +91-141-2770000 Ext: 567",
        hi: "ЁЯПа JECRC рд╣реЙрд╕реНрдЯрд▓ рд╕реБрд╡рд┐рдзрд╛рдПрдВ:\n\nЁЯПв рд▓рдбрд╝рдХреЛрдВ рдФрд░ рд▓рдбрд╝рдХрд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЕрд▓рдЧ рд╣реЙрд╕реНрдЯрд▓\nЁЯПа рд╕реБрд╕рдЬреНрдЬрд┐рдд AC/Non-AC рдХрдорд░реЗ\nЁЯН╜я╕П рд╕реНрд╡рд╕реНрде рднреЛрдЬрди рдХреЗ рд╕рд╛рде рд╢рд╛рдХрд╛рд╣рд╛рд░реА рдореЗрд╕\nЁЯУ╢ рд╣рд╛рдИ-рд╕реНрдкреАрдб Wi-Fi\nЁЯЫбя╕П CCTV рдХреЗ рд╕рд╛рде 24/7 рд╕реБрд░рдХреНрд╖рд╛\nЁЯПе рдХреИрдВрдкрд╕ рдореЗрдВ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реБрд╡рд┐рдзрд╛рдПрдВ\nЁЯТк рдЬрд┐рдо рдФрд░ рдордиреЛрд░рдВрдЬрди рд╕реБрд╡рд┐рдзрд╛рдПрдВ\nЁЯЪ┐ рдЧрд░реНрдо рдкрд╛рдиреА рдХреА рдЖрдкреВрд░реНрддрд┐\nЁЯУЪ рдЕрдзреНрдпрдпрди рдХрдХреНрд╖ рдФрд░ рдХреЙрдорди рдПрд░рд┐рдпрд╛\n\nЁЯТ░ рдлреАрд╕: тВ╣60,000-тВ╣80,000/рд╡рд░реНрд╖ (рднреЛрдЬрди рд╕рд╣рд┐рдд)",
        raj: "ЁЯПа JECRC рд╣реЙрд╕реНрдЯрд▓ рд╕реБрд╡рд┐рдзрд╛рд╡рд╛рдВ:\n\nЁЯПв рдЫреЛрд░реЛрдВ рдЕрд░ рдЫреЛрд░рд┐рдпреЛрдВ рдЦрд╛рддрд░ рдЕрд▓рдЧ рд╣реЙрд╕реНрдЯрд▓\nЁЯПа рд╕реБрд╕рдЬреНрдЬрд┐рдд AC/Non-AC рдХрдорд░реЗ\nЁЯН╜я╕П рд╕реНрд╡рд╕реНрде рдЦрд╛рдирд╛ рдХреЗ рд╕рд╛рде рд╢рд╛рдХрд╛рд╣рд╛рд░реА рдореЗрд╕\nЁЯУ╢ рд╣рд╛рдИ-рд╕реНрдкреАрдб Wi-Fi\nЁЯЫбя╕П CCTV рдХреЗ рд╕рд╛рде 24/7 рд╕рд┐рдХреНрдпреЛрд░рд┐рдЯреА\nЁЯПе рдХреИрдВрдкрд╕ рдореЗрдВ рдореЗрдбрд┐рдХрд▓ рд╕реБрд╡рд┐рдзрд╛\nЁЯТк рдЬрд┐рдо рдЕрд░ рдордиреЛрд░рдВрдЬрди рд╕реБрд╡рд┐рдзрд╛\nЁЯЪ┐ рдЧрд░реНрдо рдкрд╛рдиреА\nЁЯУЪ рдкрдврд╝рд╛рдИ рдХреЗ рдХрдорд░реЗ рдЕрд░ рдХреЙрдорди рдПрд░рд┐рдпрд╛\n\nЁЯТ░ рдлреАрд╕: тВ╣60,000-тВ╣80,000/рд╕рд╛рд▓ (рдЦрд╛рдирд╛ рд╕рд╣рд┐рдд)"
      }
    };

    const normalizedMessage = message.toLowerCase();
    let bestMatch: MatchResult = { response: '', confidence: 0, category: '' };

    // Enhanced keyword matching with weights
    const keywords: KeywordMapping = {
      admission: {
        keywords: ['admission', 'pravesh', 'dakhla', 'join', 'apply', 'bharti', 'рдкреНрд░рд╡реЗрд╢', 'рджрд╛рдЦрд▓рд╛', 'entrance', 'eligibility', 'рджрд╛рдЦрд▓реЗ', 'рдЬрд╛рдирдХрд╛рд░реА'],
        weight: 0.9
      },
      fees: {
        keywords: ['fee', 'fees', 'cost', 'price', 'amount', 'shulk', 'рдлреАрд╕', 'рдкреИрд╕рд╛', 'рдЦрд░реНрдЪ', 'scholarship', 'рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐'],
        weight: 0.9
      },
      courses: {
        keywords: ['course', 'program', 'degree', 'branch', 'stream', 'рдХреЛрд░реНрд╕', 'рдкрд╛рдареНрдпрдХреНрд░рдо', 'cse', 'mba', 'engineering'],
        weight: 0.8
      },
      facilities: {
        keywords: ['facility', 'lab', 'library', 'hostel', 'campus', 'рд╕реБрд╡рд┐рдзрд╛', 'рд▓рд╛рдЗрдмреНрд░реЗрд░реА', 'рд╣реЙрд╕реНрдЯрд▓', 'infrastructure', 'рдЫрд╛рддреНрд░рд╛рд╡рд╛рд╕', 'accommodation', 'room'],
        weight: 0.8
      },
      hostel: {
        keywords: ['hostel', 'accommodation', 'room', 'mess', 'boarding', 'рд╣реЙрд╕реНрдЯрд▓', 'рдЫрд╛рддреНрд░рд╛рд╡рд╛рд╕', 'рдХрдорд░рд╛', 'рдореЗрд╕', 'рд░рд╣рдирд╛'],
        weight: 0.9
      },
      placement: {
        keywords: ['placement', 'job', 'career', 'company', 'recruit', 'рдиреМрдХрд░реА', 'рдкреНрд▓реЗрд╕рдореЗрдВрдЯ', 'рдХрдВрдкрдиреА', 'salary', 'package'],
        weight: 0.9
      }
    };

    for (const [category, data] of Object.entries(keywords)) {
      const matchCount = data.keywords.filter(keyword => normalizedMessage.includes(keyword)).length;
      if (matchCount > 0) {
        const confidence = Math.min(0.95, (matchCount * data.weight) + 0.5); // Increased base confidence
        if (confidence > bestMatch.confidence) {
          bestMatch = {
            response: enhancedKnowledge[category] ? enhancedKnowledge[category][language as keyof typeof enhancedKnowledge[typeof category]] || enhancedKnowledge[category].en : '',
            confidence: confidence,
            category: category
          };
        }
      }
    }

    if (bestMatch.response) {
      return {
        answer: bestMatch.response,
        language: language,
        confidence: bestMatch.confidence,
        source: 'enhanced_knowledge',
        category: bestMatch.category
      };
    } else {
      return this.fallbackResponse(message, language, intent);
    }
  }

  fallbackResponse(message: string, language: string, intent: string = 'general'): AIResponse {
    const responses: ResponseMapping = {
      en: {
        greeting: "Hello! I'm here to help you with JECRC Foundation queries.",
        admission: "For admission information, please check our admissions office or website.",
        fees: "Fee structure varies by course. Please contact the accounts department.",
        courses: "We offer various undergraduate and postgraduate programs.",
        library: "Our library is open from 8 AM to 8 PM with extensive resources.",
        hostel: "JECRC provides separate hostels for boys and girls with modern amenities. Facilities include furnished rooms, mess with vegetarian meals, Wi-Fi, common rooms, gym, and 24/7 security. Hostel fees range from тВ╣60,000 to тВ╣80,000 per year including meals. Medical facilities and recreational activities are also available.",
        scholarship: "Multiple scholarship programs are available based on merit and need.",
        default: "I'd be happy to help! Could you please be more specific about your query?"
      },
      hi: {
        greeting: "рдирдорд╕реНрддреЗ! рдореИрдВ JECRC Foundation рдХреЗ рдкреНрд░рд╢реНрдиреЛрдВ рдореЗрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдБ рд╣реВрдБред",
        admission: "рдкреНрд░рд╡реЗрд╢ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдХреЗ рд▓рд┐рдП, рдХреГрдкрдпрд╛ рд╣рдорд╛рд░реЗ рдкреНрд░рд╡реЗрд╢ рдХрд╛рд░реНрдпрд╛рд▓рдп рдпрд╛ рд╡реЗрдмрд╕рд╛рдЗрдЯ рджреЗрдЦреЗрдВред",
        fees: "рдлреАрд╕ рд╕рдВрд░рдЪрдирд╛ рдХреЛрд░реНрд╕ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЕрд▓рдЧ рд╣реИред рдХреГрдкрдпрд╛ рдЦрд╛рддрд╛ рд╡рд┐рднрд╛рдЧ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред",
        courses: "рд╣рдо рд╡рд┐рднрд┐рдиреНрди рд╕реНрдирд╛рддрдХ рдФрд░ рд╕реНрдирд╛рддрдХреЛрддреНрддрд░ рдХрд╛рд░реНрдпрдХреНрд░рдо рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВред",
        library: "рд╣рдорд╛рд░реА рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╕реБрдмрд╣ 8 рдмрдЬреЗ рд╕реЗ рд░рд╛рдд 8 рдмрдЬреЗ рддрдХ рд╡реНрдпрд╛рдкрдХ рд╕рдВрд╕рд╛рдзрдиреЛрдВ рдХреЗ рд╕рд╛рде рдЦреБрд▓реА рд╣реИред",
        hostel: "JECRC рд▓рдбрд╝рдХреЛрдВ рдФрд░ рд▓рдбрд╝рдХрд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЖрдзреБрдирд┐рдХ рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдХреЗ рд╕рд╛рде рдЕрд▓рдЧ рд╣реЙрд╕реНрдЯрд▓ рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реИред рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдореЗрдВ рд╕реБрд╕рдЬреНрдЬрд┐рдд рдХрдорд░реЗ, рд╢рд╛рдХрд╛рд╣рд╛рд░реА рднреЛрдЬрди рдХреЗ рд╕рд╛рде рдореЗрд╕, Wi-Fi, рдХреЙрдорди рд░реВрдо, рдЬрд┐рдо, рдФрд░ 24/7 рд╕реБрд░рдХреНрд╖рд╛ рд╢рд╛рдорд┐рд▓ рд╣реИред рд╣реЙрд╕реНрдЯрд▓ рдлреАрд╕ рднреЛрдЬрди рд╕рд╣рд┐рдд тВ╣60,000 рд╕реЗ тВ╣80,000 рдкреНрд░рддрд┐ рд╡рд░реНрд╖ рд╣реИред",
        scholarship: "рдпреЛрдЧреНрдпрддрд╛ рдФрд░ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдХрдИ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдХрд╛рд░реНрдпрдХреНрд░рдо рдЙрдкрд▓рдмреНрдз рд╣реИрдВред",
        default: "рдореБрдЭреЗ рдорджрдж рдХрд░рдиреЗ рдореЗрдВ рдЦреБрд╢реА рд╣реЛрдЧреА! рдХреНрдпрд╛ рдЖрдк рдЕрдкрдиреЗ рдкреНрд░рд╢реНрди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдФрд░ рд╡рд┐рд╕реНрддрд╛рд░ рд╕реЗ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ?"
      },
      raj: {
        greeting: "рдирдорд╕реНрдХрд╛рд░! рдореНрд╣реИрдВ JECRC Foundation рдХреЗ рд╕рд╡рд╛рд▓реЛрдВ рдореЗрдВ рдерд╛рд░реА рдорджрдж рдХрд░рдиреЗ рдЦрд╛рддрд░ рдпрд╣рд╛рдБ рд╣реВрдБред",
        admission: "рджрд╛рдЦрд▓реЗ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдЦрд╛рддрд░, рдкреНрд░рд╡реЗрд╢ рдХрд╛рд░реНрдпрд╛рд▓рдп рдпрд╛ рд╡реЗрдмрд╕рд╛рдЗрдЯ рджреЗрдЦреЛред",
        fees: "рдлреАрд╕ рдХреЛрд░реНрд╕ рдХреЗ рдореБрддрд╛рдмрд┐рдХ рдЕрд▓рдЧ рд╕реИред рдЦрд╛рддрд╛ рд╡рд┐рднрд╛рдЧ рддреИ рд╕рдВрдкрд░реНрдХ рдХрд░реЛред",
        courses: "рдореНрд╣рд╛рд░реИ рдпрд╣рд╛рдБ рд╡рд┐рднрд┐рдиреНрди рд╕реНрдирд╛рддрдХ рдЕрд░ рд╕реНрдирд╛рддрдХреЛрддреНрддрд░ рдХрд╛рд░реНрдпрдХреНрд░рдо рд╕реИред",
        library: "рдореНрд╣рд╛рд░реА рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╕реБрдмрд╣ 8 рддреИ рд░рд╛рдд 8 рдмрдЬреЗ рддрдХ рдЦреБрд▓реА рд░рд╣рд╡реИ рд╕реИред",
        hostel: "JECRC рдЫреЛрд░реЛрдВ рдЕрд░ рдЫреЛрд░рд┐рдпреЛрдВ рдЦрд╛рддрд░ рдЖрдзреБрдирд┐рдХ рд╕реБрд╡рд┐рдзрд╛рд╡рд╛рдВ рдХреЗ рд╕рд╛рде рдЕрд▓рдЧ рд╣реЙрд╕реНрдЯрд▓ рджреЗрд╡реИ рд╕реИред рд╕реБрд╡рд┐рдзрд╛рд╡рд╛рдВ рдореЗрдВ рд╕реБрд╕рдЬреНрдЬрд┐рдд рдХрдорд░реЗ, рд╢рд╛рдХрд╛рд╣рд╛рд░реА рдЦрд╛рдирд╛ рдХреЗ рд╕рд╛рде рдореЗрд╕, Wi-Fi, рдХреЙрдорди рд░реВрдо, рдЬрд┐рдо, рдЕрд░ 24/7 рд╕рд┐рдХреНрдпреЛрд░рд┐рдЯреА рд╕реИред рд╣реЙрд╕реНрдЯрд▓ рдлреАрд╕ рдЦрд╛рдирд╛ рд╕рд╣рд┐рдд тВ╣60,000 рддреИ тВ╣80,000 рдкреНрд░рддрд┐ рд╕рд╛рд▓ рд╕реИред",
        scholarship: "рдпреЛрдЧреНрдпрддрд╛ рдЕрд░ рдЬрд░реВрд░рдд рдХреЗ рдЖрдзрд╛рд░ рдкреИ рдХрдИ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдХрд╛рд░реНрдпрдХреНрд░рдо рд╕реИред",
        default: "рдореНрд╣реИрдВ рдорджрдж рдХрд░рдиреЗ рдореЗрдВ рдЦреБрд╢ рд╣реВрдБ! рдерд╛рд░реЛ рд╕рд╡рд╛рд▓ рдФрд░ рд╕рд╛рдл рдХрд░рдХреЗ рдмрддрд╛рдУред"
      }
    };

    const languageResponses = responses[language] || responses.en;
    const responseText = (languageResponses && languageResponses[intent]) || 
                        (languageResponses && languageResponses.default) ||
                        'I apologize, but I could not understand your question. Please try asking in a different way.';

    return {
      answer: responseText,
      language: language,
      confidence: 0.6,
      source: 'fallback_response'
    };
  }

  /**
   * Get contextual response based on intent
   */
  getContextualResponse(message: string, language: string, intent: string): AIResponse {
    // Use our enhanced fallback response
    return this.fallbackResponse(message, language, intent);
  }

  /**
   * Simple context search fallback
   */
  searchInContext(question: string, context: string): AIResponse {
    const words = question.toLowerCase().split(' ');
    const contextLower = context.toLowerCase();
    
    // Find sentences containing question keywords
    const sentences = context.split(/[.!?]+/);
    const relevantSentences = sentences.filter(sentence => {
      const sentenceLower = sentence.toLowerCase();
      return words.some(word => sentenceLower.includes(word));
    });

    if (relevantSentences.length > 0) {
      return {
        answer: relevantSentences.slice(0, 3).join('. ').trim() + '.',
        confidence: 0.6,
        language: 'en',
        source: 'context_search'
      };
    }

    return {
      answer: 'I found some relevant information, but could you be more specific?',
      confidence: 0.3,
      language: 'en',
      source: 'context_search'
    };
  }

  /**
   * Basic sentiment analysis fallback
   */
  basicSentiment(text: string): SentimentResult {
    const positiveWords = ['good', 'great', 'excellent', 'amazing', 'wonderful', 'fantastic', 'love', 'like', 'happy'];
    const negativeWords = ['bad', 'terrible', 'awful', 'hate', 'dislike', 'sad', 'angry', 'frustrated', 'disappointed'];
    
    const lowerText = text.toLowerCase();
    
    const positiveCount = positiveWords.filter(word => lowerText.includes(word)).length;
    const negativeCount = negativeWords.filter(word => lowerText.includes(word)).length;
    
    if (positiveCount > negativeCount) {
      return { label: 'POSITIVE', score: 0.7 };
    } else if (negativeCount > positiveCount) {
      return { label: 'NEGATIVE', score: 0.7 };
    } else {
      return { label: 'NEUTRAL', score: 0.5 };
    }
  }

  /**
   * Get usage statistics
   */
  getUsageStats(): { requestCount: number; dailyLimit: number; remainingRequests: number } {
    return {
      requestCount: this.requestCount,
      dailyLimit: this.dailyLimit,
      remainingRequests: this.dailyLimit - this.requestCount
    };
  }
}

export default FreeAIService;